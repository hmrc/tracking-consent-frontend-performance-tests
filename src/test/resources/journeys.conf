# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configure here your journeys. A journey is a sequence of requests at a certain load.

journeys {

    get-tracking-js = {
      description = "A service requests the tracking.js script"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      # ~10% of calls return 200 OK with content
      load = 25

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        tracking-js-uncached
      ]
    }

    get-tracking-js-cached = {
      description = "A service requests the tracking.js script, but can use its cached copy"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      # ~90% of calls return 304 Not Modified with no body
      load = 227

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        tracking-js-cached
      ]
    }

    get-optimizely-js = {
      description = "A service requests the optimizely.js script"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      # ~10% of calls return 200 OK with content
      load = 33

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        optimizely-js-uncached
      ]
    }

    get-optimizely-js-cached = {
      description = "A service requests the optimizely.js script, but can use its cached copy"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      # ~90% of calls return 304 Not Modified with no body
      load = 303

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        optimizely-js-cached
      ]
    }

    audit-consent = {
      description = "A user's tracking consent decision is audited"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      load = 12

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        audit-consent
      ]
    }

    cookie-settings-page = {
      description = "A user visits the cookie settings page"

      # The load is in journeys per second. Put here the load you are going to have at the peak.
      # There is no need to put a higher value at this point. Use prerftest.loadPercentage in application.conf instead
      load = 0.06

      # The parts your journey is made of. A part is made one or more requests.
      parts = [
        cookie-settings
      ]
    }
}
